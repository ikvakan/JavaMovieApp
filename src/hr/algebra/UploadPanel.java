/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra;

import hr.algebra.model.Movie;

import hr.algebra.model.MoviesTableModel;
import hr.algebra.parser.rss.MovieParser;
import hr.algebra.repo.dal.MovieRepository;
import hr.algebra.repo.dal.RepositoryFactory;
import hr.algebra.utils.MessageUtils;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.xml.stream.XMLStreamException;

/**
 *
 * @author IgorKvakan
 */
public class UploadPanel extends javax.swing.JPanel {

    private MovieRepository repository;

    private MoviesTableModel moviesTableModel;

    public UploadPanel() {
        initComponents();
        init();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpload = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMovies = new javax.swing.JTable();

        btnUpload.setBackground(new java.awt.Color(51, 0, 255));
        btnUpload.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpload.setForeground(new java.awt.Color(255, 255, 255));
        btnUpload.setText("Upload movies");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        tblMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Title", "Description", "Director", "Actors", "Duration", "Genre", "PubDate", "PicturePath"
            }
        ));
        jScrollPane2.setViewportView(tblMovies);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed

        try {

            if (repository.selectMovies().size() > 0) {
                loadTableModel();
                return;
            }
            
            uploadMovies();
            

        } catch (Exception e) {
            Logger.getLogger(UploadPanel.class.getName()).log(Level.SEVERE, null, e);
            MessageUtils.showErrorMessage("Unrecoverable error", "Unable to upload movies");
        }


    }//GEN-LAST:event_btnUploadActionPerformed

    private void uploadMovies() throws Exception, XMLStreamException, IOException {
        Set<Movie> sortedMovies = new TreeSet<>();
        List<Movie> movies = new ArrayList<>();

        movies = MovieParser.parse();
        movies.forEach(m -> sortedMovies.add(m));
        repository.createMovies(sortedMovies);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpload;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMovies;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            intiRepositry();
            initTable();
        } catch (Exception e) {

        }
    }

    private void intiRepositry() {
        repository = RepositoryFactory.getMovieRepository();
    }

    private void initTable() throws IOException, XMLStreamException {
        tblMovies.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblMovies.setAutoCreateRowSorter(true);
        tblMovies.setRowHeight(25);

    }

    private void loadTableModel() throws Exception {
        
        List<Movie> movies = repository.selectMovies();
        moviesTableModel = new MoviesTableModel(movies);
        tblMovies.setModel(moviesTableModel);
    }

}
